const assert = require('assert');

const SuffixTree = require('./suffixTree');

function runSortHotelListTests() {
    const testSuffixTree = function(firstString, secondString, properAnswer) {
        const answer = longestCommonSubstringSuffixTree(firstString, secondString);
        
        assert.equal(
            properAnswer,
            answer,
            `"HeapSortError: Input: ${firstString} and ${secondString}; Proper answer: ${properAnswer}; Your answer: ${answer}`
        );
    };
    
    const longestCommonSubstringSuffixTree = function(s, t) {
        const st = new SuffixTree();
        
        const text = s.length > t.length ? s : t;
        const pattern = s.length > t.length ? t : s;
        
        st.addString(pattern + '#' + text + '$');
        //st.addString(pattern);
        //st.addString(text + '$');
        
        //st.print();
        //console.log(st.findLongestCommonSubstring());
        
        return st.findLongestCommonSubstring().length;
    };
    
    testSuffixTree('abcdxyz', 'xyzabcd', 4);
    testSuffixTree('zxabcdezy', 'yzabcdezx', 6);
    testSuffixTree('ABC', 'ABCD', 3);
    testSuffixTree('ABCD', 'ABC', 3);
    testSuffixTree('ABCDGH', 'ACDGHR', 4);
    testSuffixTree('ABC', 'AC', 1);
    testSuffixTree('LRBBMQBHCDARZOWKKYHIDDQSCDXRJMOWFRXSJYBLDBEFSARCBYNECDYGGXXPKLORELLNMPAPQFWKHOPKMCO', 'QHNWNKUEWHSQMGBBUQCLJJIVSWMDKQTBXIXMVTRRBLJPTNSNFWZQFJMAFADRRWSOFSBCNUVQHFFBSAQXWPQCAC', 2);
    testSuffixTree('CHZVFRKMLNOZJK', 'PQPXRJXKITZYXACBHHKICQCOENDTOMFGDWDWFCGPXIQVKUYTDLCGDEWHTACIOHORDTQKVWCSGSPQOQMSBOAGUWN', 1);
    testSuffixTree('QXNZLGDGWPBTRWBLNSADEUGUUMOQCDRUBETOKYXHOACHWDVMXXRDRYXLMNDQTUKWAGMLEJUUKWCIBXU', 'BUMENMEYATDRMYDIAJXLOGHIQFMZHLVIHJOUVSUYOYPAYULYEI', 2);
    testSuffixTree('OTEHZRIICFSKPGGKBBIPZZRZUCXAMLUDFYKGRUOWZGIOOOBPPLEQLWPHAPJNADQHDCNVWDTXJBMYPPPHAUXNSPUSGDHIIXQMBF', 'JXJCVUDJSUYIBYEBMWSIQYOYGYXYMZEVYPZV', 2);
    testSuffixTree('GEBEOCFUFTSXDIXTIGSIEEHKCHZ', 'DFLILRJQFNXZ', 1);
    testSuffixTree('RSVBSPK', 'YHSENBPPKQTPDDBUOTBBQCWIVRFXJUJJDDNTGEIQVDGAIJVWCYAUBWEWPJVYGEHLJXEPBPIWUQZDZU', 2);
    testSuffixTree('UBZVAFSPQPQ', 'WUZIF', 1);
    testSuffixTree('VYDDWYVVBURCZMGYJGFDXVTNUNNESLSPLWUIUPFXLZBKNHKWPPANLTCFIRJCDDSOZOYVEGURFW', 'CSFMOXEQMRJOWRGHWLKOBMEAHK', 2);
    testSuffixTree('CNAEHHSVEYMQPXHLRNUNYFDZRHBASJEUYGAFOUBUTPNIMUWFJQSJXVKQDORXXVRWCTDSNEOGVBPKXLPGDIRBFC', 'RIQIFPGYNKRREFXSNVUCFTPWCTGTWMXNUPYCFGCU', 3);
    testSuffixTree('NUBLMOIITNCKLEFSZBEX', 'RAMPETVHQNDDJEQVUYGPNKAZQFRPJVOAXDPCWMJOBMSKSKFOJNEWXGXNNOFWLTWJWNNVBWJCKDMEOUUZHYVHGVWUJBQX', 2);
    testSuffixTree('ITCVOGRAIDDVHRRDSYCQHKLEEWHXTEMBAQWQW', 'PQHSUEBNVFGVJWDVJJAFQZZXLCXDZNCQGJLAPOPKVXFGVICETCMKBLJOPGT', 2);
    testSuffixTree('VHBGSDVIVHESNKQXMWRQIDRVMHLUBBRYKTHEYENTMROBDEYQCRGLUAIIHVEIXWJJRQOPUBJGUXHX', 'DIPFZWSWYBGFYLQVJZHARVRLYAUUZDRCNJKPHCLFFRKEECBPDIPUFHIDJCXJHRNXCXMJCXOHQANXDRMGZEB', 2);
    testSuffixTree('LMWPMHWDVTHSFQUEEEXGRUJIGSKMVRZGFWVRFTWAPDT', 'UTPBZTYGNSRXAJJNGCOMIKJZSDWSSZNOVDRUYPCNJULKFUZMXNAFAMESPCKJCAZXDRTDGYRQSCCZYBN', 2);
    testSuffixTree('QCQCJITLVCNVBMASIDZ', 'GWRAATZZWPWMFBFJKNCVKELHHZJCHPDNLUNMPPNLGJZNKEWWUYSGEFONEXPM', 1);
    testSuffixTree('BAOPMDGZQMKQZXUVTQVNXBSLQZKGLZAMZPDNSJOLVYBWXXTTQOGNRBAIAKQLLSZKHF', 'ZCONNMOQKLPEEFSNSMOUWQHODSGCFOHESYSHMGXWTOAYUVNOJDJFTQTWKBAPRIUJIMQWSPSLGVLCSAQBDBGWTBSEETTWDNFNBY', 2);
    testSuffixTree('PDJXYUZQXSTATBZPCTTHOOFREMGFKRBCVKZVGBOFTHGOJHDNAYWPNBITORAAIBEDNEZWFPDAWLOHSSVTQ', 'TKFVSYLJZLUCQ', 1);
    testSuffixTree('WYQDNTDMFRTZLQSEKEJHZKSKLFEPXCHVCZYSVDGCXBBISWMEAYLZIFKTMOIKSSFXTGPOJXQIYSRSQFWQDJQNQCGDQRNLLUI', 'EAZVMWNUUFNNXVLOYVGMLIUQANDLYAVFAUAOSNLNVACSVPIUMOIAWCQXSWKQWGXYAZNTNAIKAMEYBNUQBCQAGGXACHRYNQXQQM', 3);
    testSuffixTree('OTPQHVOKIIAMMQMVXJVBSOA', 'IFZYXNJCBERRNMIXXSYJHOVENGBPYQRIXQGWDRYGXRXKFHICAINHWILKQMBPESZDIGZNZ', 2);
    testSuffixTree('ZQSJWATYCBMJAWWMNINEPFDUPLUCLTXMKPV', 'GRRGTUSEURAGELTKCAPWPBQROMQAWIX', 2);
    testSuffixTree('QKVLFBHWCOCPJMRMBPBEGVSULUQTUUVKESVJTDHVTJMEXFQBVUFDPAXCWN', 'WQJTBPLYZEDICWSODPWTQRPYUEARHWGFNPAQELOFRSOTQIKTXIPQZ', 2);
    testSuffixTree('VLQMUOUBBJBRPMIXFCLBSTNOSVDKUJCPWSDQHXRKIUEZIO', 'WOQJPIECWXXBJTNMKJGNCPMVAUQGTAUSOKBFUGJTFIUQBJCLVLAZAMUCIMICNEWDOX', 2);
    testSuffixTree('FUEMDADGKHUFSUEVJAXRNIVCORHFRQQWNUJQU', 'O', 1);
    testSuffixTree('VSLQPRLYSKRHUNLJGSOXLEUYYFQU', 'TOZQHMGYETYYEPFAESJLKZIVDEVDLLYGAZXJNDJRXHRDYYDDQNQDOAYSHWXSHXZJYWUMBFFAMXDNXJQOYIRMIR', 2);
    testSuffixTree('NEKXDLICJFQKKVNXUQMSZCIXMZKWSQOIWYFALP', 'EUUUGFRTEOMQINUQNIRXELP', 2);
    testSuffixTree('OSAODQSZKOGRFBXTNPDBLTQTMPYYEQTUJUIOKCOWSWQYXN', 'TNDXQQSGKHVIHBAAWJUGAGLODDKTDJIZYNYOESU', 2);
    testSuffixTree('RYITYJRIFXIMKYROKKTVUSUIQIOJFCKYATRYEKIJKSVUSOKCYEAVWUFPCTAJXKIXDBXJMITWCQQX', 'FBBFHBADVFUAAUJXFRWKVUUHEPDIFVFKYHSFIULEA', 2);
    testSuffixTree('AAPAHJWTESPLWEQFMNMYMTQ', 'RELEIN', 1);
    testSuffixTree('PMFPVOMQUEGHDMXKYNWXZQNSWAXGNJWDXBUUSGKMNQWQDVADIW', 'AHOQAKQZQGKMLHQFDIMNWZGSPLOROWNPGEHIOXHHFRVQALWDTKSSLY', 3);
    testSuffixTree('JATAXGPDMYLDXUKDNFTPRRUMBMEMLROWRHWOQNTCLGHLCRORZHGSBAECPLPCCDYVNXMDMFHAOPLQ', 'IZKHIQBJTIMITDKXIKSXJECWMKWABHSL', 2);
    testSuffixTree('VQVWCQEQAZTKYDWRBGXDCJPALSHGEPKZHHVLXCBXDWJCCGTDOQIS', 'CYSPQZVUQIVZPTLPVOOYNYAPGVSWOAOSAGHRFFNXNJYEELTZAIZNIC', 2);
    testSuffixTree('ZWKNWYHZGPQLWFKJQIPUUJVWTXLBZNRYJDOHBVGHMYUIGGTYQJTMUQ', 'INNTQMIHNTKDDNALWNMSXSATQQELDACNNPJFERMRNYUQNWBJJPDJHDEAVKNYKPOXHX', 2);
    testSuffixTree('QQEDQAVDWZOIORRWWXYRHLSRDGQKDUVTMZZCZUFVTVFIOYGKVEDERVVUDNEGHB', 'CTCBXDXEZRZGBPFHZANFFECCBGQFMZJQTLRSPPXQIYWJOBSPEFUJLXNMDDURDDIYOBQ', 2);
    testSuffixTree('PVCOULCVDRZKMKWLYIQDCHGHRGYTZDNOBQCVDEQJYSTMEPXCANIEWQMOXKJWPYMQORLUXEDVYWHCOGH', 'OT', 1);
    testSuffixTree('SFGIESTCKRPAIGOCFUFBUBIYRRFFMWAEEIMIDFNNZCPHKFL', 'PB', 1);
    testSuffixTree('VTDWLUDS', 'GAUNGFZOIHBXIFOPRWCJZSDXNGTACWTJYPWEUXVEGYBOGSFXQHIP', 1);
    testSuffixTree('MPUFPXCKICAGHUFCZMACCGWIGMRQCTEQKBWBAAMICOQLIVNJJOOMWKUCZNVDGZTQA', 'RSARGKWUAHEYVOHLETJQPO', 1);
    testSuffixTree('JSLKOELFYNZEAVAACEAZUIMYDYPVMGYXBLHPPUUNK', 'TTKQTMVANUUVJVAHMVVUV', 2);
    testSuffixTree('HZKYWHMGCHQVDCQDPMZMXWNEIKZFGTANTNLPWZ', 'VAHNVKPLPFAOTXNGEXRFCZZDMUSZLOBIOKVKWKXLRXBLVOTZOMEQLFTXZLZKBCSQMNCIAZVRZYEUPYVDKBTWHPVGCWTEYLWKB', 2);
    testSuffixTree('BXRUWSZSHXPM', 'JRHFAWDIBZBFYPDKSBHTAAPZSORBNJPZCXECVJMWJQDJHGVZJCUKFJJZACBPNSOPPVTLEI', 2);
    testSuffixTree('YNYFVUEFYYRDJADJEGBSY', 'PJOMFBRNKILZHSVBWCZWTDFVIRBOSVMJFCYMDRZQZKPGEMJAOJYJOFEYWIMQDAC', 2);
    testSuffixTree('AWITXYSJQZNCIPTTNC', 'JTJHRTVKW', 1);
    testSuffixTree('JBQHJJFKBOACCENRXIHCSANBTGXDCTTNUJVFSCRWQTYUYNMXWVBQXORQ', 'UOWZHPMDZJLR', 1);
    testSuffixTree('NCYOYWBMVZHXPENHVIVTHFIVKHFXBQAQUYETWIFTHNSXRGGOQBHXIQSVZ', 'ZSCQUTMSZF', 2);
    testSuffixTree('NMTAEQTMYKCBRZKJUHLTZNLUIYOKFHVSTOUZGQMEAOGRQSDMZOHYDTUOTJYYST', 'TLKNMQDYVDPBX', 2);
    testSuffixTree('ATUQASTVPHOAHPSDIFNXRFBQAGHDFOYHHSXHNTDCCTCMIUPQZEQSJRKMZRPHFOOOIOYVJDXNWBZHVQZWUPRGIBSITJPAZFRIT', 'PFESFSQGR', 1);
    testSuffixTree('KXCGMTMVVGFQQWSPD', 'JXZADDUKVLQPKUZJZHWSUTPCAFSYAIBJHAMMEGWBTPQELRNKBLDXGUZGCSEC', 2);
    testSuffixTree('NLIZYOGWQZLIFXCTHDGMANJZTLTANVIAJSCHHKDXLRFROHMXMSMMHVODIH', 'DVFNXOFBXMLCLXVROJACJPWXBEURHCBMZGZWWGYVTLZEIVXYGAAPPZOSDIKKMLWLTXIRDIOYTNFEIEEPEH', 2);
    testSuffixTree('GVQJFAVSNTFIQNBVXPUTCZZNFDCMKKHSHXDNZYHORMWJ', 'CXFBOBWRCVEHBITNSDGAC', 1);
    testSuffixTree('EIYSBMRNOQSSFVOYXKEGLMAYGFG', 'IHQZNAZGDMZQCPIUUDJ', 1);
}

runSortHotelListTests();
